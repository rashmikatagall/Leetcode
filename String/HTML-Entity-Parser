class Solution {
    public String entityParser(String text) {
        
        Map<String,Character> map = new HashMap<>();
        map.put("&quot;",'"');
        map.put("&apos;",'\'');
        map.put("&amp;", '&');
        map.put("&gt;",'>');
        map.put("&lt;",'<');
        map.put("&frasl;",'/');
      
        StringBuilder sb = new StringBuilder();
        char[] c = text.toCharArray();
        int i = 0;
        int len = text.length();
        
        while(i<len) 
        {
            if (c[i] == '&')
            {
                char spc;
                int j;
                if(i+6 <= len && map.containsKey(text.substring(i,i+6)))
                {
                    spc = map.get(text.substring(i,i+6));
                    j=6;
                }
                else if(i+5 <= len &&           map.containsKey(text.substring(i,i+5)))
                {
                    spc = map.get(text.substring(i,i+5));
                    j=5;
                }
                else if(i+4<=len && map.containsKey(text.substring(i,i+4)))
                {
                    spc = map.get(text.substring(i,i+4));
                    j=4;
                }       
                else if(i+7<=len && map.containsKey(text.substring(i,i+7)))
                {
                    spc = map.get(text.substring(i,i+7)); 
                    j=7;
                }
                else
                {
                    spc = '&';
                    j=1;
                }
                sb.append(spc);
                i=i+j;
            }
                
            else
            {
                sb.append(c[i]);
                i++;
            }
        }
        
        return sb.toString();
    }
}
