class AuthenticationManager {

    int timeToLive;
    Map<String,Integer> tokens;
    
    public AuthenticationManager(int timeToLive) {
        this.timeToLive = timeToLive;
        tokens = new HashMap<>();
    }
    
    public void generate(String tokenId, int currentTime) {
        tokens.put(tokenId, currentTime+timeToLive);
    }
    
    public void renew(String tokenId, int currentTime) {
        
        if(!tokens.containsKey(tokenId))
            return;
        
        if(tokens.get(tokenId) > currentTime)
             tokens.put(tokenId,currentTime+timeToLive);
        else
            tokens.remove(tokenId);
    }
    
    public int countUnexpiredTokens(int currentTime) {
       return (int)tokens.entrySet().parallelStream().filter(e -> e.getValue()>currentTime).count();
    }
}

/**
 * Your AuthenticationManager object will be instantiated and called as such:
 * AuthenticationManager obj = new AuthenticationManager(timeToLive);
 * obj.generate(tokenId,currentTime);
 * obj.renew(tokenId,currentTime);
 * int param_3 = obj.countUnexpiredTokens(currentTime);
 */
