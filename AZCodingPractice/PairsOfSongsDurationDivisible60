class Solution {
    public int numPairsDivisibleBy60(int[] time) {
     /*   int pairs = 0;
        
        for(int i=0;i<time.length-1;i++)
        {
            for(int j=i+1;j<time.length;j++)
            {
                if((time[i] + time[j]) % 60 == 0)
                    pairs++;
            }
        }
        
        return pairs;*/
        
     Map<Integer,Integer> map = new HashMap<>(); 
     int pairs=0;
     for(int i=0;i<time.length;i++)
     {
         int val = time[i]%60;
         map.put(val, map.getOrDefault(val,0)+1);
     }
       
     for(int i=0;i<time.length;i++)
     {
        int mod = time[i]%60;
        int diff = (60-mod)%60;
         
        if(map.containsKey(diff)){
            int count = map.get(diff);
         
        if(count == 0 || (count == 1 && mod == diff))
            continue;
         
         pairs += diff == mod? count - 1 : count;
         map.put(mod,map.get(mod)-1);
        }
     }
        
    return pairs;
  
         
    }
}
