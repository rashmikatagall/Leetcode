import java.util.Arrays;
import java.util.*;
import java.util.Scanner;
import java.util.stream.Collectors;

class Solution {
    public static int getMaxScore(int n, List<Integer> cards) {
        // WRITE YOUR BRILLIANT CODE HERE
        Cards cardcomp = new Cards();
        Queue<Cards> q = new PriorityQueue<>(cardcomp);
        Set<Integer> eliminated = new HashSet<>();
        int score = 0;
        for(int i=0;i < cards.size();i++)
            for(int j=0;j<cards.size();j++)
                if(i != j)
                    q.add(new Cards(cards.get(i), cards.get(j),i ,j));
           
        while(!q.isEmpty() && eliminated.size() < cards.size())
         {
             Cards c = q.poll();
             if(!eliminated.contains(c.i1) && !eliminated.contains(c.i2))
             {
                 score += c.gcd * n;
                 n--;
                 eliminated.add(c.i1);
                 eliminated.add(c.i2);
             }
             
         }   
         
         return score;
                          
                          
                          
    }

    public static class Cards implements Comparator<Cards>{
     
        private int c1;
        private int c2;
        public int i1;
        public int i2;
        public int gcd;
        
        Cards(){}
        
        Cards(int c1,int c2,int i1, int i2)
        {
            this.c1 = c1;
            this.c2 = c2;
            this.i1 = i1;
            this.i2 = i2;
            this.gcd = getgcd(c1,c2);
        }
        
        private int getgcd(int c1, int c2)
        {
         
            while(c1 != 0)
            {
               int t = c1;
               c1 = c2 % c1;
               c2 = t;
               
            }
            
            return c2;
        }
        
        public int compare(Cards c1, Cards c2)
        {
            return c2.gcd-c1.gcd;
            
        }
        
        
    }
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = Integer.parseInt(scanner.nextLine());
        List<Integer> cards = Arrays.stream(scanner.nextLine().split(" ")).map(Integer::parseInt).collect(Collectors.toList());
        scanner.close();
        int res = getMaxScore(n, cards);
        System.out.println(res);
    }
}
