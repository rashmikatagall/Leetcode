class Solution {
    public int numIslands(char[][] grid) {
        
        if(grid == null || grid.length == 0)
            return 0;
        
        int r = grid.length;
        int c = grid[0].length;
        boolean[][] seen = new boolean[r][c];
        int count = 0;
        
        for(int i=0;i<r;i++)
        {
            for(int j=0;j<c;j++)
            {
               
                if(grid[i][j] == '1' && !seen[i][j])
                {
                  count++;
                  searchThis(i,j,grid,seen);
                }
                
            }
        }
        
        return count;
    }
    
    public void searchThis(int i,int j, char[][] grid, boolean[][] seen)
    {
        if(grid[i][j] == '0')
            return;
        
        if(grid[i][j] == '1' && seen[i][j])
            return;
        else
            seen[i][j] = true;
        
        if(i-1>=0)
            searchThis(i-1,j,grid,seen);
        if(i+1<grid.length)
            searchThis(i+1,j,grid,seen);
        if(j-1>=0)
            searchThis(i,j-1,grid,seen);
        if(j+1<grid[0].length)
            searchThis(i,j+1,grid,seen);
    }
}
