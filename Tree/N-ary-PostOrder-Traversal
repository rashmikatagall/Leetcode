class Solution {
    public List<Integer> postorder(Node root) {
        
        List<Integer> list = new ArrayList<>();
        if(root == null)
            return list;
        postOrderTraverse(root, list);
        list.add(root.val);
        return list;
    }
    
    public void postOrderTraverse(Node root, List<Integer> list)
    {
        if(root == null)
            return;
        
        if(root.children.size() == 0)
            return;
            
        
        for(Node node:root.children)
        {
            postOrderTraverse(node,list);
            list.add(node.val);
        }
       
       
        return;
    }
}
