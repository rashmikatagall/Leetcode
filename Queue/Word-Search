class Solution {
    public boolean exist(char[][] board, String word) {
        Queue<int[]> q = new LinkedList<>();
        int ilen = board.length;
        int jlen = board[0].length;
        
        for(int i=0;i<board.length;i++)
            for(int j=0;j<board[0].length;j++)
                if(board[i][j] == word.charAt(0))
                    q.add(new int[]{i,j,0});
        
        if(q.isEmpty())
            return false;
        
        int[][] dirs = {{1,0},{-1,0},{0,1},{0,-1}};
        
        while(!q.isEmpty())
        {
            int[] i = q.poll();
            for(int[] dir :dirs)
            {
                int i0 = i[0]+dir[0];
                int j0 = i[1]+ dir[1];
                if(i0 > 0 && i0 < ilen && j0 >0 && j0 < jlen && board[i0][j0] == word.charAt(i[2]+1))
                {
                    if((i[2]+1) == word.length()-1)
                        return true;
                    q.add(new int[]{i0,j0,i[2]+1});
                }
            }
        }
        
        
        return false;
        
        
    }
}
